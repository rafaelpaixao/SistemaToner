/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.movimentacoes;

import control.Sistema;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import model.*;
import view.Alertas;

/**
 *
 * @author Rafael
 */
public class MovimentacoesSaida extends javax.swing.JInternalFrame {

    Sistema sistema;
    ArrayList<Toner> listaToner;
    ArrayList<Setor> listaSetor;

    public MovimentacoesSaida(Sistema sistema) {
        this.sistema = sistema;
        initComponents();

        try {
            this.listaToner = this.sistema.getListaDeToner();
            if (!listaToner.isEmpty()) {
                String[] toners = new String[this.listaToner.size()];
                for (int i = 0; i < this.listaToner.size(); i++) {
                    toners[i] = this.sistema.getModeloImpressora(this.listaToner.get(i).getIdModeloImpressora()).getModeloToner() + " (" + this.listaToner.get(i).getTipo() + ")";
                }
                DefaultComboBoxModel model = new DefaultComboBoxModel(toners);
                this.jComboBoxToner.setModel(model);
            }

            this.listaSetor = this.sistema.getListaDeSetores();
            if (!listaSetor.isEmpty()) {
                String[] setores = new String[this.listaSetor.size()];
                for (int i = 0; i < this.listaSetor.size(); i++) {
                    setores[i] = listaSetor.get(i).getNome() + " - " + listaSetor.get(i).getEmpresa();
                }
                DefaultComboBoxModel model = new DefaultComboBoxModel(setores);
                this.jComboBoxSetor.setModel(model);
            }
        } catch (SQLException ex) {
            Alertas.erroBanco(this,ex.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextQtd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxToner = new javax.swing.JComboBox<>();
        jComboBoxSetor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Nova Saída");
        setPreferredSize(new java.awt.Dimension(295, 165));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jTextQtd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextQtd.setText("0");

        jLabel1.setText("Quantidade:");

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Toner:");

        jLabel4.setText("Setor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxToner, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxSetor, 0, 198, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxToner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        setBounds(300, 100, 366, 140);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean sucesso = false;
        try {
            int qtd = Integer.parseInt(this.jTextQtd.getText());
            String agora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
            Saida x = new Saida();
            x.setIdToner(listaToner.get(this.jComboBoxToner.getSelectedIndex()).getId());
            x.setIdUsuario(this.sistema.getIdUsuarioAtivo());
            x.setQuantidade(qtd);
            x.setData(agora);
            x.setIdSetor(listaSetor.get(this.jComboBoxSetor.getSelectedIndex()).getId());

            try {
                sucesso = this.sistema.cadastrarSaida(x);
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                Alertas.erroBanco(this,ex.toString());
            }

        } catch (NumberFormatException e) {
            Alertas.erroFormatoEntrada(this);
        }
        Alertas.sucessoOuErro(this, sucesso);
            if (sucesso) {
                this.dispose();
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        if (listaToner.isEmpty()) {
            Alertas.mensagem(this, "É preciso cadastrar um toner!");
            this.dispose();
        } else if (listaSetor.isEmpty()) {
            Alertas.mensagem(this, "É preciso cadastrar um setor!");
            this.dispose();
        }
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxSetor;
    private javax.swing.JComboBox<String> jComboBoxToner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextQtd;
    // End of variables declaration//GEN-END:variables
}
